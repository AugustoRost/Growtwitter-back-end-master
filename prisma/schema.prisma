generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid()) @db.Uuid
  name String @db.VarChar(60)
  email String @unique @db.VarChar(60) 
  password String @db.VarChar(60)
  userName String @unique @db.VarChar(60) @map("username")
  token String?

  tweet Tweet[]
  like Like[]
  follower Follower[] @relation("follower_user")
  following Follower[] @relation("following_user")
  reply Reply[]

  @@map("users")
}

enum TypeTweet {
  Tweet
  Reply
}

model Tweet {
  id String @id @default(uuid()) @db.Uuid
  content String @db.VarChar(200)
  type TypeTweet @default(Tweet)
  
  userId String @map("user_id") @db.Uuid
  user User @relation(fields: [userId], references: [id])
  
  like Like[]
  replay Reply[]
  
  @@map("tweets")
}

model Like {
  id String @id @default(uuid()) @db.Uuid
  
  userId String @map("user_id") @db.Uuid
  user User @relation(fields: [userId], references: [id])

  tweetId String @map("tweet_id") @db.Uuid
  tweet Tweet @relation(fields: [tweetId], references: [id])
  
  @@map("likes")
}

model Follower {
  id String @id @default(uuid()) @db.Uuid

  followId String @map("user_id") @db.Uuid
  follower User @relation(name:"follower_user", fields: [followId], references: [id])

  followingId String @map("follow_id") @db.Uuid
  following User @relation(name:"following_user",fields: [followingId], references: [id])

  @@map("followers")
}

model Reply {
  id String @id @default(uuid()) @db.Uuid

  tweetId String @map("tweet_id") @db.Uuid
  reply Tweet @relation(fields:[tweetId], references: [id])

  userId String @map("user_id") @db.Uuid
  replyUser User @relation(fields:[userId], references: [id])
  @@map("replies")
}